<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd">
    <bean id="abstractDataSource" abstract="true" class="com.alibaba.druid.pool.DruidDataSource" init-method="init" destroy-method="close">
        <property name="filters" value="stat" />
        <property name="maxActive" value="20" />
        <property name="initialSize" value="1" />
        <property name="maxWait" value="60000" />
        <property name="minIdle" value="1" />

        <property name="timeBetweenEvictionRunsMillis" value="60000" />
        <property name="minEvictableIdleTimeMillis" value="300000" />

        <property name="testWhileIdle" value="true" />
        <property name="testOnBorrow" value="false" />
        <property name="testOnReturn" value="false" />

        <property name="poolPreparedStatements" value="true" />
        <property name="maxOpenPreparedStatements" value="20" />
    </bean>

    <bean id="dataSourceOracle" parent="abstractDataSource">
        <property name="driverClassName" value="oracle.jdbc.driver.OracleDriver" />
        <property name="url" value="jdbc:oracle:thin:@192.168.1.12:1521:XE" />
        <property name="username" value="rh_prod" />
        <property name="password" value="rh_prod" />
    </bean>

    <bean id="dataSourceSqlServer" parent="abstractDataSource">
        <property name="driverClassName" value="com.microsoft.sqlserver.jdbc.SQLServerDriver" />
        <property name="url" value="jdbc:sqlserver://192.168.11.12:1433;databasename=master" />
        <property name="username" value="sa" />
        <property name="password" value="bl00m2#" />
    </bean>

    <bean id="dataSource" class="com.brian.rh.jdbc.RoutingDataSource">
        <!-- 为targetDataSources注入两个数据源 -->
        <property name="targetDataSources">
            <map key-type="java.lang.String">
                <entry key="oracleDataSource" value-ref="dataSourceOracle"/>
                <entry key="sqlServerDataSource" value-ref="dataSourceSqlServer"/>
            </map>
        </property>
        <!-- 为指定数据源RoutingDataSource注入默认的数据源-->
        <!--<property name="defaultTargetDataSource" ref="dataSourceOracle"/>-->
    </bean>
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
            <property name="dataSource" ref="dataSource"></property>
            <property name="mapperLocations" value="classpath:com/brian/rh/jdbc/orm/mybatis/**/*.xml"></property>
            <property name="configLocation" value="classpath:mybatis-config.xml"></property>
    </bean>
    <!--<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
        &lt;!&ndash; 扫描me.gacl.dao这个包以及它的子包下的所有映射接口类 &ndash;&gt;
        <property name="basePackage" value="com.brian.rh.jdbc.orm.mybatis" />
        <property name="sqlSessionFactoryBeanName" value="sqlSessionFactory" />
    </bean>-->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg index="0" ref="sqlSessionFactory" />
    </bean>
    <bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
        <constructor-arg index="0" ref="dataSource"></constructor-arg>
    </bean>


</beans>